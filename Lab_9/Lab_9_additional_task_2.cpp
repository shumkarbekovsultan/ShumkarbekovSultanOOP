// additional task 2

#include <iostream>
#include <stdexcept>

using namespace std;

class Parent {
private:
    int privateData;

public:
    Parent(int data) : privateData(data) {}

    int getPrivateData() const {
        return privateData;
    }
};

class Child : public Parent {
public:
    Child(int data) : Parent(data) {}

    int getPrivateDataFromParent() const {
        try {
            return getPrivateData(); // ??????? ??????? ? ????????? ???? ????????????? ??????
        } catch (const exception& e) {
            throw runtime_error("?????? ??????? ? ????????? ???? ????????????? ??????");
        }
    }
};

int main() {
    Child child(10);
    try {
        cout << "???????? ????????? ???? ????????????? ??????: " << child.getPrivateDataFromParent() << endl;
    } catch (const exception& e) {
        cout << "??????: " << e.what() << endl;
    }

    return 0;
}
